{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ItemByName } from '../components/ItemByName';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const params = useParams();\n  const page = params.page;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"asd asd adminDashboardasd\", page == 123 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n}\n_s(AdminDashboard, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = AdminDashboard;\nexport { AdminDashboard };\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","Component","useParams","ItemByName","Fragment","_Fragment","jsxDEV","_jsxDEV","AdminDashboard","_s","params","page","children","_c","$RefreshReg$"],"sources":["/Users/george/Documents/GitHub/react.ror2/src/pages/adminDashboard.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ItemByName } from '../components/ItemByName';\n\n\nfunction AdminDashboard () {\n    const params = useParams()\n    const page = params.page\n    return(\n        <>\n        asd\n        asd\n        adminDashboardasd\n        {page == 123 ? (<></>) : (<></>)}\n        </>\n    )\n}\n\nexport {AdminDashboard}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtD,SAASC,cAAcA,CAAA,EAAI;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,IAAI,GAAGD,MAAM,CAACC,IAAI;EACxB,oBACIJ,OAAA,CAAAF,SAAA;IAAAO,QAAA,GAAE,2BAIF,EAACD,IAAI,IAAI,GAAG,gBAAIJ,OAAA,CAAAF,SAAA,mBAAI,CAAC,gBAAKE,OAAA,CAAAF,SAAA,mBAAI,CAAE;EAAA,eAC9B,CAAC;AAEX;AAACI,EAAA,CAXQD,cAAc;EAAA,QACJN,SAAS;AAAA;AAAAW,EAAA,GADnBL,cAAc;AAavB,SAAQA,cAAc;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}